{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zuic/WebstormProjects/major-studio-1/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n            animation: \", \" 4s easy-in-out infinite\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            0% {-webkit-transform: rotate(0deg);}\\n            100% {-webkit-transform: rotate(360deg);}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            from {-webkit-transform:translate(0, 0px);}\\n            65% {-webkit-transform:translate(0, 50px);}\\n            to {-webkit-transform: translate(0, -0px);}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport { scale } from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\nexport class EachCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false\n    };\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleSelected() {\n    this.setState(prevState => {\n      return {\n        isSelected: !prevState.isSelected\n      };\n    });\n  }\n\n  render() {\n    const svgPath = \"https://storage.googleapis.com/ceramics/assets/\".concat(this.props.iso, \".svg\");\n    const width = this.props.width;\n    const height = this.props.height;\n    const lat = this.props.latLon[0];\n    const lon = this.props.latLon[1];\n    const count = this.props.objectCount;\n    const country = this.props.country;\n    const isSelected = this.state.isSelected; // console.log(objectIDs)\n    // https://storage.googleapis.com/ceramics/with_country_crops/${eachID}.png\n\n    let imageCloud;\n\n    if (isSelected) {\n      imageCloud = React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          top: Math.round(Math.random() * height),\n          left: Math.round(Math.random() * width)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" \", this.props.country), React.createElement(\"h1\", {\n        style: {\n          top: Math.round(Math.random() * height),\n          left: Math.round(Math.random() * width)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", this.props.objectCount), this.props.objectIDs.map(each => React.createElement(\"img\", {\n        key: each,\n        src: \"https://storage.googleapis.com/ceramics/with_country_crops/\".concat(each, \".png\"),\n        style: {\n          width: '100px',\n          height: '100px',\n          top: Math.round(Math.random() * this.props.height),\n          left: Math.round(Math.random() * this.props.width),\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n\n    const countryStyle = {\n      opacity: scale(this.props.objectCount, 1, 2616, 0.1, 1),\n      marginTop: Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)),\n      marginLeft: Math.round(scale(lon, -102.553, 174.886, height / 10, width - height / 10)),\n      width: 100,\n      height: 100,\n      position: 'absolute'\n    };\n    const fillColor = isSelected ? \"#A6807A\" : \"#384e68\";\n    const floating = keyframes(_templateObject());\n    const spinning = keyframes(_templateObject2());\n    const Float = styled.div(_templateObject3(), spinning);\n    console.log(Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)));\n    return React.createElement(\"div\", {\n      style: {\n        position: 'absolute'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(SVG, {\n      className: \"float spin\",\n      src: svgPath,\n      onMouseEnter: this.handleSelected,\n      onMouseLeave: this.handleSelected,\n      style: countryStyle,\n      uniquifyIDs: true,\n      preProcessor: code => code.replace(/fill=\".*?\"/g, \"fill=\".concat(fillColor)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), imageCloud);\n  }\n\n}","map":{"version":3,"sources":["/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js"],"names":["React","SVG","scale","styled","css","keyframes","EachCountry","Component","constructor","props","state","isSelected","handleSelected","bind","setState","prevState","render","svgPath","iso","width","height","lat","latLon","lon","count","objectCount","country","imageCloud","position","top","Math","round","random","left","objectIDs","map","each","countryStyle","opacity","marginTop","marginLeft","fillColor","floating","spinning","Float","div","console","log","code","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport  {scale} from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nexport class EachCountry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={isSelected:false};\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    handleSelected(){\n        this.setState((prevState)=>{\n            return {isSelected: !prevState.isSelected};\n        });\n    }\n\n    render(){\n        const svgPath = `https://storage.googleapis.com/ceramics/assets/${this.props.iso}.svg`;\n        const width = this.props.width;\n        const height = this.props.height;\n        const lat = this.props.latLon[0];\n        const lon = this.props.latLon[1];\n        const count = this.props.objectCount;\n        const country = this.props.country;\n        const {isSelected} = this.state;\n        // console.log(objectIDs)\n\n\n        // https://storage.googleapis.com/ceramics/with_country_crops/${eachID}.png\n\n\n        let imageCloud;\n        if (isSelected){\n            imageCloud = <div style={{position:'relative'}}>\n                <h1 style={{top:Math.round(Math.random() * height),\n                    left:Math.round(Math.random() * width)}}> {this.props.country}</h1>\n                <h1 style={{top:Math.round(Math.random() * height),\n                    left:Math.round(Math.random() * width)}}> {this.props.objectCount}</h1>\n                {this.props.objectIDs.map((each)=><img key={each} src={`https://storage.googleapis.com/ceramics/with_country_crops/${each}.png`} style={{width:'100px',\n                    height:'100px',\n                    top:Math.round(Math.random() * this.props.height),\n                    left:Math.round(Math.random() * this.props.width),\n                    position:'absolute'}} />)}\n\n            </div>\n        }\n\n        const countryStyle = {\n            opacity: scale(this.props.objectCount,1,2616,0.1,1),\n            marginTop: Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)),\n            marginLeft: Math.round(scale(lon, -102.553,174.886,height/10, width-height/10)),\n            width: 100,\n            height: 100,\n            position: 'absolute'\n        };\n        const fillColor = isSelected?\"#A6807A\":\"#384e68\"\n        const floating = keyframes`\n            from {-webkit-transform:translate(0, 0px);}\n            65% {-webkit-transform:translate(0, 50px);}\n            to {-webkit-transform: translate(0, -0px);}`;\n        const spinning = keyframes`\n            0% {-webkit-transform: rotate(0deg);}\n            100% {-webkit-transform: rotate(360deg);}`;\n        const Float = styled.div`\n            animation: ${spinning} 4s easy-in-out infinite`;\n\n        console.log(Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)));\n        return(\n            <div style={{position:'absolute'}}>\n                <SVG className=\"float spin\" src={svgPath} onMouseEnter={this.handleSelected} onMouseLeave={this.handleSelected} style={countryStyle} uniquifyIDs={true} preProcessor={code => code.replace(/fill=\".*?\"/g, `fill=${fillColor}`)}/>\n\n                {imageCloud}\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}