{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zuic/WebstormProjects/major-studio-1/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n            animation: \", \" 4s easy-in-out infinite\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            0% {-webkit-transform: rotate(0deg);}\\n            100% {-webkit-transform: rotate(360deg);}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            from {-webkit-transform:translate(0, 0px);}\\n            65% {-webkit-transform:translate(0, 50px);}\\n            to {-webkit-transform: translate(0, -0px);}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport { scale } from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport Particles from \"react-particles-js\";\nexport class EachCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false\n    };\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleSelected() {\n    this.setState(prevState => {\n      return {\n        isSelected: !prevState.isSelected\n      };\n    });\n  }\n\n  render() {\n    const svgPath = \"https://storage.googleapis.com/ceramics/assets/\".concat(this.props.iso, \".svg\");\n    const width = this.props.width;\n    const height = this.props.height;\n    const lat = this.props.latLon[0];\n    const lon = this.props.latLon[1];\n    const objectIDs = this.props.objectIDs;\n    const count = this.props.objectCount;\n    const isSelected = this.state.isSelected; // console.log(objectIDs)\n\n    const images = this.props.objectIDs.map(eachID => {\n      let img = {};\n      img.src = \"https://storage.googleapis.com/ceramics/with_country_crops/\".concat(eachID, \".png\");\n      img.height = 50;\n      img.width = 50;\n      return img;\n    });\n    const params = {\n      \"particles\": {\n        \"number\": {\n          \"value\": {\n            count\n          },\n          \"density\": {\n            \"enable\": false\n          }\n        },\n        \"line_linked\": {\n          \"enable\": false\n        },\n        \"move\": {\n          \"speed\": 1,\n          \"out_mode\": \"out\"\n        },\n        \"shape\": {\n          \"type\": \"images\",\n          \"images\": images\n        }\n      },\n      \"retina_detect\": false\n    }; // https://storage.googleapis.com/ceramics/with_country_crops/${eachID}.png\n\n    console.log(images);\n    let imageCloud;\n\n    if (isSelected) {\n      imageCloud = React.createElement(Particles, {\n        params: {\n          params\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    const countryStyle = {\n      opacity: scale(this.props.objectCount, 1, 2616, 0.1, 1),\n      marginLeft: Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)),\n      marginTop: Math.round(scale(lon, -102.553, 174.886, height / 10, width - height / 10)),\n      width: 100,\n      height: 100\n    };\n    const floating = keyframes(_templateObject());\n    const spinning = keyframes(_templateObject2());\n    const Float = styled.div(_templateObject3(), spinning);\n    console.log(Math.round(scale(-lat, -56.264, 40.901, height / 10, height / 10 * 9)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(SVG, {\n      className: \"float spin\",\n      src: svgPath,\n      onClick: this.handleSelected,\n      style: countryStyle,\n      uniquifyIDs: true,\n      preProcessor: code => code.replace(/fill=\".*?\"/g, 'fill=\"#384e68\"'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), imageCloud);\n  }\n\n}","map":{"version":3,"sources":["/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js"],"names":["React","SVG","scale","styled","css","keyframes","Particles","EachCountry","Component","constructor","props","state","isSelected","handleSelected","bind","setState","prevState","render","svgPath","iso","width","height","lat","latLon","lon","objectIDs","count","objectCount","images","map","eachID","img","src","params","console","log","imageCloud","countryStyle","opacity","marginLeft","Math","round","marginTop","floating","spinning","Float","div","code","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport  {scale} from \"./Helpers\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport Particles from \"react-particles-js\";\nexport class EachCountry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={isSelected:false};\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    handleSelected(){\n        this.setState((prevState)=>{\n            return {isSelected: !prevState.isSelected};\n        });\n    }\n\n    render(){\n        const svgPath = `https://storage.googleapis.com/ceramics/assets/${this.props.iso}.svg`;\n        const width = this.props.width;\n        const height = this.props.height;\n        const lat = this.props.latLon[0];\n        const lon = this.props.latLon[1];\n        const objectIDs =  this.props.objectIDs;\n        const count = this.props.objectCount;\n        const {isSelected} = this.state;\n        // console.log(objectIDs)\n        const images = this.props.objectIDs.map((eachID)=>{\n            let img = {};\n            img.src =`https://storage.googleapis.com/ceramics/with_country_crops/${eachID}.png`;\n            img.height=50;\n            img.width=50\n            return img;\n        });\n        const params = {\n            \"particles\": {\n                \"number\": {\n                    \"value\": {count},\n                    \"density\": {\n                        \"enable\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": false\n                },\n                \"move\": {\n                    \"speed\": 1,\n                    \"out_mode\": \"out\"\n                },\n                \"shape\": {\n                    \"type\": \"images\",\n                    \"images\": images\n                }\n            },\n            \"retina_detect\": false\n        }\n        // https://storage.googleapis.com/ceramics/with_country_crops/${eachID}.png\n        console.log(images)\n\n        let imageCloud;\n        if (isSelected){\n            imageCloud=<Particles\n                params={{params}} />\n        }\n\n        const countryStyle = {\n            opacity: scale(this.props.objectCount,1,2616,0.1,1),\n            marginLeft: Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)),\n            marginTop: Math.round(scale(lon, -102.553,174.886,height/10, width-height/10)),\n            width: 100,\n            height: 100,\n        };\n\n        const floating = keyframes`\n            from {-webkit-transform:translate(0, 0px);}\n            65% {-webkit-transform:translate(0, 50px);}\n            to {-webkit-transform: translate(0, -0px);}`;\n        const spinning = keyframes`\n            0% {-webkit-transform: rotate(0deg);}\n            100% {-webkit-transform: rotate(360deg);}`;\n        const Float = styled.div`\n            animation: ${spinning} 4s easy-in-out infinite`;\n\n        console.log(Math.round(scale(-lat, -56.264,40.901,height/10, height/10*9)));\n        return(\n            <div>\n                <SVG className=\"float spin\" src={svgPath} onClick={this.handleSelected} style={countryStyle} uniquifyIDs={true} preProcessor={code => code.replace(/fill=\".*?\"/g, 'fill=\"#384e68\"')}/>\n                {imageCloud}\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}