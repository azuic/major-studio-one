{"ast":null,"code":"var _jsxFileName = \"/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js\";\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport useWindowDimensions, { fullColorHex, scale } from \"./Helpers\";\nexport class EachCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false\n    };\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleSelected() {\n    this.setState(prevState => {\n      return {\n        isSelected: !prevState.isSelected\n      };\n    });\n  }\n\n  render() {\n    const isSelected = this.state.isSelected;\n    const svgPath = \"https://storage.googleapis.com/ceramics/assets/\".concat(this.props.iso, \".svg\");\n    const width = this.props.width;\n    const height = this.props.height;\n    const lat = this.props.latLon[0];\n    const countryStyle = {\n      color: '#384E68',\n      opacity: scale(this.props.objectCount, 1, 2616, 0.1, 1),\n      top: scale(-parseInt(this.props.lat), -56.264, 40.901, height / 10, height / 10 * 9),\n      left: scale(parseInt(this.props.lon), -102.553, 174.886, height / 10, width - height / 10),\n      width: 56,\n      height: 56\n    };\n    return React.createElement(SVG, {\n      src: svgPath,\n      onClick: this.handleSelected,\n      style: countryStyle,\n      uniquifyIDs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/zuic/WebstormProjects/major-studio-1/src/components/EachCountry.js"],"names":["React","SVG","useWindowDimensions","fullColorHex","scale","EachCountry","Component","constructor","props","state","isSelected","handleSelected","bind","setState","prevState","render","svgPath","iso","width","height","lat","latLon","countryStyle","color","opacity","objectCount","top","parseInt","left","lon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,mBAAP,IAA6BC,YAA7B,EAA0CC,KAA1C,QAAsD,WAAtD;AAEA,OAAO,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAZ;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,cAAc,GAAE;AACZ,SAAKE,QAAL,CAAeC,SAAD,IAAa;AACvB,aAAO;AAACJ,QAAAA,UAAU,EAAE,CAACI,SAAS,CAACJ;AAAxB,OAAP;AACH,KAFD;AAGH;;AAEDK,EAAAA,MAAM,GAAE;AAAA,UAEGL,UAFH,GAEiB,KAAKD,KAFtB,CAEGC,UAFH;AAGJ,UAAMM,OAAO,4DAAqD,KAAKR,KAAL,CAAWS,GAAhE,SAAb;AACA,UAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AACA,UAAMC,MAAM,GAAG,KAAKX,KAAL,CAAWW,MAA1B;AACA,UAAMC,GAAG,GAAG,KAAKZ,KAAL,CAAWa,MAAX,CAAkB,CAAlB,CAAZ;AACA,UAAMC,YAAY,GAAG;AACjBC,MAAAA,KAAK,EAAE,SADU;AAEjBC,MAAAA,OAAO,EAAEpB,KAAK,CAAC,KAAKI,KAAL,CAAWiB,WAAZ,EAAwB,CAAxB,EAA0B,IAA1B,EAA+B,GAA/B,EAAmC,CAAnC,CAFG;AAGjBC,MAAAA,GAAG,EAAEtB,KAAK,CAAC,CAACuB,QAAQ,CAAC,KAAKnB,KAAL,CAAWY,GAAZ,CAAV,EAA4B,CAAC,MAA7B,EAAoC,MAApC,EAA2CD,MAAM,GAAC,EAAlD,EAAsDA,MAAM,GAAC,EAAP,GAAU,CAAhE,CAHO;AAIjBS,MAAAA,IAAI,EAAExB,KAAK,CAACuB,QAAQ,CAAC,KAAKnB,KAAL,CAAWqB,GAAZ,CAAT,EAA2B,CAAC,OAA5B,EAAoC,OAApC,EAA4CV,MAAM,GAAC,EAAnD,EAAuDD,KAAK,GAACC,MAAM,GAAC,EAApE,CAJM;AAKjBD,MAAAA,KAAK,EAAE,EALU;AAMjBC,MAAAA,MAAM,EAAE;AANS,KAArB;AAUA,WAEQ,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEH,OAAV;AAAmB,MAAA,OAAO,EAAE,KAAKL,cAAjC;AAAiD,MAAA,KAAK,EAAEW,YAAxD;AAAsE,MAAA,WAAW,EAAE,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAKH;;AAnC2C","sourcesContent":["import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport useWindowDimensions, {fullColorHex,scale} from \"./Helpers\";\n\nexport class EachCountry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={isSelected:false};\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    handleSelected(){\n        this.setState((prevState)=>{\n            return {isSelected: !prevState.isSelected};\n        });\n    }\n\n    render(){\n\n        const {isSelected} = this.state;\n        const svgPath = `https://storage.googleapis.com/ceramics/assets/${this.props.iso}.svg`;\n        const width = this.props.width;\n        const height = this.props.height;\n        const lat = this.props.latLon[0];\n        const countryStyle = {\n            color: '#384E68',\n            opacity: scale(this.props.objectCount,1,2616,0.1,1),\n            top: scale(-parseInt(this.props.lat), -56.264,40.901,height/10, height/10*9),\n            left: scale(parseInt(this.props.lon), -102.553,174.886,height/10, width-height/10),\n            width: 56,\n            height: 56\n        };\n\n\n        return(\n\n                <SVG src={svgPath} onClick={this.handleSelected} style={countryStyle} uniquifyIDs={true}/>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}